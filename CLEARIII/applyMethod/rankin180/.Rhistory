outcome_tmt$mortality <- (outcome_tmt$patient_status=="Dead")
outcome_tmt$mortality[outcome_tmt$patient_status == "Lost to follow-up"] <- NA
##Relabel treatment assignment to A = 0 and B = 1
outcome_tmt$tmt <- 1
outcome_tmt$tmt[outcome_tmt$treatment == "A"] <- 0
##Exclude "died" (not up-to-date)
##Exclude "patient_status" (redundant to "mortality")
##Exclude "lost_to_followup" (it is part of "mortality")
##Exclude "site_rankin" (it is the outcome determined by each site,
##while "glasgow_rankin" is the independently adjudicated outcome)
##Exclude "rankin_not_done" (it corresponds to "site_rankin")
outcome_tmt <- data.frame(patientnum = outcome_tmt$patientnum,
visit_day = outcome_tmt$visit_day,
mortality = outcome_tmt$mortality,
rankin = outcome_tmt$glasgow_rankin,
tmt = outcome_tmt$tmt)
##For those who died, rankin = 6
##For some, we know neither mortality nor rankin
##For some, we know they are alive but rankin is unknown
table(outcome_tmt$mortality, outcome_tmt$rankin, useNA = "ifany")
sub30 <- subset(outcome_tmt, visit_day == 30)
sub180 <- subset(outcome_tmt, visit_day == 180)
##Rename outcome variables in sub30 and sub180
names(sub30)[3:4] <- c("mortality30","rankin30")
names(sub180)[3:4] <- c("mortality180","rankin180")
##Do not need visit_day anymore and only need tmt in one of sub30 and sub180
sub30 <- sub30[,-c(2,5)]
sub180 <- sub180[,-2]
data <- merge(sub30, sub180, by = "patientnum")
names(volume)
head(volume)
Vol <- data.frame(patientnum = volume$patientnum,
initIVHvol = volume$stability_ivh_volume_rc,
eotIVHvol = volume$eot_ivh_volume_rc,
thalamic_ich = volume$thalamic_ich,
age_at_consent = volume$age_at_consent)
head(Vol)
data <- merge(data,Vol, by = "patientnum")
data$RICV <- data$initIVHvol - data$eotIVHvol ##absolute reduction in clot volume
data$percentRICV <- data$RICV/data$initIVHvol*100
##Step 3: Save data
setwd("~/Desktop/CLEARIII/constructDataset")
save(data, file= "data.Rdata")
setwd("~/Desktop/CLEARIII/constructDataset")
load("data.Rdata")
getInput.mortality30 <- function(data){
val <- c(sum(data$tmt == 0 & data$mortality30 == 1), sum(data$tmt == 0 & data$mortality30 == 0),
sum(data$tmt == 1 & data$mortality30 == 1), sum(data$tmt == 1 & data$mortality30 == 0))
return(val)
}
temp <- subset(data, !is.na(mortality30))
all <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol <= 17.5)
vol_less17.5 <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol > 17.5)
vol_more17.5 <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol <= 20)
vol_less20 <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol > 20 & initIVHvol <= 50)
vol_20to50 <- getInput.mortality30(temp)
result <- rbind(all,vol_less17.5,vol_more17.5,vol_less20,vol_20to50)
result
head(data)
sum(is.na(data$eotIVHvol))
sum(is.na(data$thalamic_ich))
sum(is.na(data$age_at_consent))
as.numeric(thalamic_ich)
as.numeric(data$thalamic_ich)
temp <- subset(data, !is.na(mortality30))
temp <- subset(data, !is.na(mortality30))
fit <- glm(mortality30 ~ age_at_consent + thalamic_ich + initIVHvol,data=temp,family=binomial())
fit
summary(fit)
rm(list=ls())
getwd()
setwd("~/Desktop/data/CLEARIII")
setwd("/users/emhuang/data/CLEARIII")
rm(list=ls())
outcome_tmt <- read.csv(file ="CLEARIII_mRS outcomes and treatment_20160115.csv")
volume <- read.csv(file ="CLEARIII_Filteredanalyticdataset_20160115.csv")
###################################################################################
##Put together data set##
###################################################################################
##Step 1: Formatting patient id, outcomes, and treatment assignment##
head(outcome_tmt)
table(outcome_tmt$died, outcome_tmt$patient_status, useNA = "ifany")
table(outcome_tmt$lost_to_followup, outcome_tmt$patient_status, useNA = "ifany")
table(outcome_tmt$lost_to_followup, outcome_tmt$glasgow_rankin, useNA = "ifany")
table(outcome_tmt$rankin_not_done, outcome_tmt$glasgow_rankin, useNA = "ifany")
table(outcome_tmt$rankin_not_done, outcome_tmt$site_rankin, useNA = "ifany")
##Define variable mortality with Alive = 0 and Dead = 1 and Lost to follow-up = NA
outcome_tmt$mortality <- (outcome_tmt$patient_status=="Dead")
outcome_tmt$mortality[outcome_tmt$patient_status == "Lost to follow-up"] <- NA
##Relabel treatment assignment to A = 0 and B = 1
outcome_tmt$tmt <- 1
outcome_tmt$tmt[outcome_tmt$treatment == "A"] <- 0
##Exclude "died" (not up-to-date)
##Exclude "patient_status" (redundant to "mortality")
##Exclude "lost_to_followup" (it is part of "mortality")
##Exclude "site_rankin" (it is the outcome determined by each site,
##while "glasgow_rankin" is the independently adjudicated outcome)
##Exclude "rankin_not_done" (it corresponds to "site_rankin")
outcome_tmt <- data.frame(patientnum = outcome_tmt$patientnum,
visit_day = outcome_tmt$visit_day,
mortality = outcome_tmt$mortality,
rankin = outcome_tmt$glasgow_rankin,
tmt = outcome_tmt$tmt)
##For those who died, rankin = 6
##For some, we know neither mortality nor rankin
##For some, we know they are alive but rankin is unknown
table(outcome_tmt$mortality, outcome_tmt$rankin, useNA = "ifany")
sub30 <- subset(outcome_tmt, visit_day == 30)
sub180 <- subset(outcome_tmt, visit_day == 180)
##Rename outcome variables in sub30 and sub180
names(sub30)[3:4] <- c("mortality30","rankin30")
names(sub180)[3:4] <- c("mortality180","rankin180")
##Do not need visit_day anymore and only need tmt in one of sub30 and sub180
sub30 <- sub30[,-c(2,5)]
sub180 <- sub180[,-2]
data <- merge(sub30, sub180, by = "patientnum")
##Step 2: Adding IVH volume (baseline and EOT), age, thalmic ICH to data##
head(volume)
Vol <- data.frame(patientnum = volume$patientnum,
initIVHvol = volume$stability_ivh_volume_rc,
eotIVHvol = volume$eot_ivh_volume_rc,
thalamic_ich = volume$thalamic_ich,
age_at_consent = volume$age_at_consent)
data <- merge(data,Vol, by = "patientnum")
head(data$thalamic_ich)
data$thalamic_ich <- as.numeric(data$thalamic_ich)
head(data$thalamic_ich)
rm(list=ls())
rm(list=ls())
outcome_tmt <- read.csv(file ="CLEARIII_mRS outcomes and treatment_20160115.csv")
volume <- read.csv(file ="CLEARIII_Filteredanalyticdataset_20160115.csv")
###################################################################################
##Put together data set##
###################################################################################
##Step 1: Formatting patient id, outcomes, and treatment assignment##
head(outcome_tmt)
table(outcome_tmt$died, outcome_tmt$patient_status, useNA = "ifany")
table(outcome_tmt$lost_to_followup, outcome_tmt$patient_status, useNA = "ifany")
table(outcome_tmt$lost_to_followup, outcome_tmt$glasgow_rankin, useNA = "ifany")
table(outcome_tmt$rankin_not_done, outcome_tmt$glasgow_rankin, useNA = "ifany")
table(outcome_tmt$rankin_not_done, outcome_tmt$site_rankin, useNA = "ifany")
##Define variable mortality with Alive = 0 and Dead = 1 and Lost to follow-up = NA
outcome_tmt$mortality <- (outcome_tmt$patient_status=="Dead")
outcome_tmt$mortality[outcome_tmt$patient_status == "Lost to follow-up"] <- NA
##Relabel treatment assignment to A = 0 and B = 1
outcome_tmt$tmt <- 1
outcome_tmt$tmt[outcome_tmt$treatment == "A"] <- 0
##Exclude "died" (not up-to-date)
##Exclude "patient_status" (redundant to "mortality")
##Exclude "lost_to_followup" (it is part of "mortality")
##Exclude "site_rankin" (it is the outcome determined by each site,
##while "glasgow_rankin" is the independently adjudicated outcome)
##Exclude "rankin_not_done" (it corresponds to "site_rankin")
outcome_tmt <- data.frame(patientnum = outcome_tmt$patientnum,
visit_day = outcome_tmt$visit_day,
mortality = outcome_tmt$mortality,
rankin = outcome_tmt$glasgow_rankin,
tmt = outcome_tmt$tmt)
##For those who died, rankin = 6
##For some, we know neither mortality nor rankin
##For some, we know they are alive but rankin is unknown
table(outcome_tmt$mortality, outcome_tmt$rankin, useNA = "ifany")
sub30 <- subset(outcome_tmt, visit_day == 30)
sub180 <- subset(outcome_tmt, visit_day == 180)
##Rename outcome variables in sub30 and sub180
names(sub30)[3:4] <- c("mortality30","rankin30")
names(sub180)[3:4] <- c("mortality180","rankin180")
##Do not need visit_day anymore and only need tmt in one of sub30 and sub180
sub30 <- sub30[,-c(2,5)]
sub180 <- sub180[,-2]
data <- merge(sub30, sub180, by = "patientnum")
##Step 2: Adding IVH volume (baseline and EOT), age, thalmic ICH to data##
head(volume)
Vol <- data.frame(patientnum = volume$patientnum,
initIVHvol = volume$stability_ivh_volume_rc,
eotIVHvol = volume$eot_ivh_volume_rc,
thalamic_ich = volume$thalamic_ich,
age_at_consent = volume$age_at_consent)
data <- merge(data,Vol, by = "patientnum")
data$thalamic_ich <- as.numeric(data$thalamic_ich)-1 ##1 thalamic, 0 non-thalamic
head(data$thalamic_ich)
data$RICV <- data$initIVHvol - data$eotIVHvol ##absolute reduction in clot volume
data$percentRICV <- data$RICV/data$initIVHvol*100
setwd("~/Desktop/CLEARIII/constructDataset")
save(data, file= "data.Rdata")
rm(list=ls())
setwd("~/Desktop/CLEARIII/constructDataset")
load("data.Rdata")
temp <- subset(data, !is.na(mortality30))
fit <- glm(mortality30 ~ age_at_consent + thalamic_ich + initIVHvol,data=temp,family=binomial())
summary(fit)
head(data)
rm(temp)
tmt <- subset(data, !is.na(mortality30) & tmt == 1)
fit <- glm(mortality30 ~ age_at_consent + thalamic_ich + initIVHvol,data=tmt,family=binomial())
fit
control <- subset(data, !is.na(mortality30) & tmt == 0)
fit.tmt <- glm(mortality30 ~ age_at_consent + thalamic_ich + initIVHvol,data=tmt,family=binomial())
rm(fit)
fit.control <- glm(mortality30 ~ age_at_consent + thalamic_ich + initIVHvol,data=control,family=binomial())
predict(fit.tmt, type="response")
length(predict(fit.tmt, type="response"))
temp <- subset(data, !is.na(mortality30))
predict(fit.tmt, newdata = temp, type="response")
temp <- subset(data, !is.na(mortality30))
predict.tmt <- predict(fit.tmt, newdata = temp, type="response")
predict.control <- predict(fit.control, newdata = temp, type="response")
predict.tmt
hist(predict.tmt - predict.control)
head(temp)
predict.benefit <- temp[predict.tmt < predict.control,]
predict.benefit
predict.noBenefit <- temp[predict.tmt >= predict.control,]
nrow(predict.benefit)
nrow(predict.noBenefit)
summary(predict.tmt - predict.control)
predict.benefit <- temp[predict.control-predict.tmt > 0.1,]
predict.benefit
nrow(predict.benefit)
69/500
predict.5benefit <- temp[predict.control-predict.tmt > 0.05,]
predict.5benefit <- temp[predict.control-predict.tmt > 0.05,]
nrow(predict.5benefit)
227/500
predict.diffG10 <- temp[predict.control-predict.tmt > 0.1,] ##G10 stands for "greater than 10%"
predict.diffL10 <- temp[predict.control-predict.tmt <= 0.1,] ##L10 stands for "less than or equal to 10%"
predict.diffG5 <- temp[predict.control-predict.tmt > 0.05,]
predict.diffL5 <- temp[predict.control-predict.tmt <= 0.05,]
predict.diffG0 <- temp[predict.control-predict.tmt > 0,]
predict.diffL0 <- temp[predict.control-predict.tmt <= 0,]
subjects.diffG10 <- temp[predict.control-predict.tmt > 0.1,] ##G10 stands for "greater than 10%"
predict.diffG10 <- getInput.mortality30(subjects.diffG10)
getInput.mortality30 <- function(data){
val <- c(sum(data$tmt == 0 & data$mortality30 == 1), sum(data$tmt == 0 & data$mortality30 == 0),
sum(data$tmt == 1 & data$mortality30 == 1), sum(data$tmt == 1 & data$mortality30 == 0))
return(val)
}
predict.diffG10 <- getInput.mortality30(subjects.diffG10)
predict.diffG10
13/(13+21)
21/(13+21)
28/(7+28)
subjects.diffL10 <- temp[predict.control-predict.tmt <= 0.1,] ##L10 stands for "less than or equal to 10%"
predict.diffL10 <- getInput.mortality30(subjects.diffL10)
predict.diffL10
194/(23+194)
199/(199+15)
predict.diffG5 <- getInput.mortality30(subjects.diffG5)
subjects.diffG5 <- temp[predict.control-predict.tmt > 0.05,]
predict.diffG5 <- getInput.mortality30(subjects.diffG5)
predict.diffG5
89/(22+89)
103/(103+13)
subjects.diffG0 <- temp[predict.control-predict.tmt > 0,]
predict.diffG0 <- getInput.mortality30(subjects.diffG0)
subjects.diffL0 <- temp[predict.control-predict.tmt <= 0,]
predict.diffL0 <- getInput.mortality30(subjects.diffL0)
predict.diffG0
181/(181+28)
195/(195+14)
rm(list=ls())
setwd("~/Desktop/data/CLEARIII")
rm(list=ls())
outcome_tmt <- read.csv(file ="CLEARIII_mRS outcomes and treatment_20160115.csv")
volume <- read.csv(file ="CLEARIII_Filteredanalyticdataset_20160115.csv")
###################################################################################
##Put together data set##
###################################################################################
##Step 1: Formatting patient id, outcomes, and treatment assignment##
head(outcome_tmt)
table(outcome_tmt$died, outcome_tmt$patient_status, useNA = "ifany")
table(outcome_tmt$lost_to_followup, outcome_tmt$patient_status, useNA = "ifany")
table(outcome_tmt$lost_to_followup, outcome_tmt$glasgow_rankin, useNA = "ifany")
table(outcome_tmt$rankin_not_done, outcome_tmt$glasgow_rankin, useNA = "ifany")
table(outcome_tmt$rankin_not_done, outcome_tmt$site_rankin, useNA = "ifany")
##Define variable mortality with Alive = 0 and Dead = 1 and Lost to follow-up = NA
outcome_tmt$mortality <- (outcome_tmt$patient_status=="Dead")
outcome_tmt$mortality[outcome_tmt$patient_status == "Lost to follow-up"] <- NA
##Relabel treatment assignment to A = 0 and B = 1
outcome_tmt$tmt <- 1
outcome_tmt$tmt[outcome_tmt$treatment == "A"] <- 0
##Exclude "died" (not up-to-date)
##Exclude "patient_status" (redundant to "mortality")
##Exclude "lost_to_followup" (it is part of "mortality")
##Exclude "site_rankin" (it is the outcome determined by each site,
##while "glasgow_rankin" is the independently adjudicated outcome)
##Exclude "rankin_not_done" (it corresponds to "site_rankin")
outcome_tmt <- data.frame(patientnum = outcome_tmt$patientnum,
visit_day = outcome_tmt$visit_day,
mortality = outcome_tmt$mortality,
rankin = outcome_tmt$glasgow_rankin,
tmt = outcome_tmt$tmt)
##For those who died, rankin = 6
##For some, we know neither mortality nor rankin
##For some, we know they are alive but rankin is unknown
table(outcome_tmt$mortality, outcome_tmt$rankin, useNA = "ifany")
sub30 <- subset(outcome_tmt, visit_day == 30)
sub180 <- subset(outcome_tmt, visit_day == 180)
##Rename outcome variables in sub30 and sub180
names(sub30)[3:4] <- c("mortality30","rankin30")
names(sub180)[3:4] <- c("mortality180","rankin180")
##Do not need visit_day anymore and only need tmt in one of sub30 and sub180
sub30 <- sub30[,-c(2,5)]
sub180 <- sub180[,-2]
data <- merge(sub30, sub180, by = "patientnum")
##Step 2: Adding IVH volume (baseline and EOT), age, thalmic ICH to data##
head(volume)
Vol <- data.frame(patientnum = volume$patientnum,
initIVHvol = volume$stability_ivh_volume_rc,
eotIVHvol = volume$eot_ivh_volume_rc,
thalamic_ich = volume$thalamic_ich,
age_at_consent = volume$age_at_consent)
data <- merge(data,Vol, by = "patientnum")
data$thalamic_ich <- as.numeric(data$thalamic_ich)-1 ##1 thalamic, 0 non-thalamic
data$RICV <- data$initIVHvol - data$eotIVHvol ##absolute reduction in clot volume
data$percentRICV <- data$RICV/data$initIVHvol*100
setwd("~/Desktop/CLEARIII/constructDataset")
setwd("/users/emhuang/CIpropBenefit/CLEARIII/constructDataset")
getwd()
save(data, file= "data.Rdata")
rm(list=ls())
getwd()
load("data.Rdata")
getInput.mortality30 <- function(data){
val <- c(sum(data$tmt == 0 & data$mortality30 == 1), sum(data$tmt == 0 & data$mortality30 == 0),
sum(data$tmt == 1 & data$mortality30 == 1), sum(data$tmt == 1 & data$mortality30 == 0))
return(val)
}
temp <- subset(data, !is.na(mortality30))
all <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol <= 17.5)
vol_less17.5 <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol > 17.5)
vol_more17.5 <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol <= 20)
vol_less20 <- getInput.mortality30(temp)
temp <- subset(data, !is.na(mortality30) & initIVHvol > 20 & initIVHvol <= 50)
vol_20to50 <- getInput.mortality30(temp)
result <- rbind(all,vol_less17.5,vol_more17.5,vol_less20,vol_20to50)
##Use G-computation to predict who benefits
tmt <- subset(data, !is.na(mortality30) & tmt == 1)
fit.tmt <- glm(mortality30 ~ age_at_consent + thalamic_ich + initIVHvol,data=tmt,family=binomial())
control <- subset(data, !is.na(mortality30) & tmt == 0)
fit.control <- glm(mortality30 ~ age_at_consent + thalamic_ich + initIVHvol,data=control,family=binomial())
temp <- subset(data, !is.na(mortality30))
predict.tmt <- predict(fit.tmt, newdata = temp, type="response")
predict.control <- predict(fit.control, newdata = temp, type="response")
subjects.diffG10 <- temp[predict.control-predict.tmt > 0.1,] ##G10 stands for "greater than 10%"
predict.diffG10 <- getInput.mortality30(subjects.diffG10)
subjects.diffL10 <- temp[predict.control-predict.tmt <= 0.1,] ##L10 stands for "less than or equal to 10%"
predict.diffL10 <- getInput.mortality30(subjects.diffL10)
subjects.diffG5 <- temp[predict.control-predict.tmt > 0.05,]
predict.diffG5 <- getInput.mortality30(subjects.diffG5)
subjects.diffL5 <- temp[predict.control-predict.tmt <= 0.05,]
predict.diffL5 <- getInput.mortality30(subjects.diffL5)
subjects.diffG0 <- temp[predict.control-predict.tmt > 0,]
predict.diffG0 <- getInput.mortality30(subjects.diffG0)
subjects.diffL0 <- temp[predict.control-predict.tmt <= 0,]
predict.diffL0 <- getInput.mortality30(subjects.diffL0)
result <- rbind(result,
predict.diffG10,
predict.diffL10,
predict.diffG5,
predict.diffL5,
predict.diffG0,
predict.diffL0)
result
8+34
8+32
13+21+7+28
8+87+1+92
rowsum(result)
sum(result[,1]+result[,2]+result[,3]+result[,4])
result
result[,1]
result[,1]+result[,2]
result[,1]+result[,2]+result[,3]
result[,1]+result[,2]+result[,3]+result[,4]
result
setwd("~/Desktop/CLEARIII/applyMethod/mortality30")
write.table(result, file = "mortality30.txt", row.names = FALSE, col.names = FALSE)
rm(list=ls())
setwd("~/Desktop/CLEARIII/applyMethod/mortality180")
setwd("~/Desktop/CLEARIII/constructDataset")
load("data.Rdata")
getInput.mortality180 <- function(data){
val <- c(sum(data$tmt == 0 & data$mortality180 == 1), sum(data$tmt == 0 & data$mortality180 == 0),
sum(data$tmt == 1 & data$mortality180 == 1), sum(data$tmt == 1 & data$mortality180 == 0))
return(val)
}
temp <- subset(data, !is.na(mortality180))
all <- getInput.mortality180(temp)
temp <- subset(data, !is.na(mortality180) & initIVHvol <= 17.5)
vol_less17.5 <- getInput.mortality180(temp)
temp <- subset(data, !is.na(mortality180) & initIVHvol > 17.5)
vol_more17.5 <- getInput.mortality180(temp)
temp <- subset(data, !is.na(mortality180) & initIVHvol <= 20)
vol_less20 <- getInput.mortality180(temp)
temp <- subset(data, !is.na(mortality180) & initIVHvol > 20 & initIVHvol <= 50)
vol_20to50 <- getInput.mortality180(temp)
result <- rbind(all,vol_less17.5,vol_more17.5,vol_less20,vol_20to50)
tmt <- subset(data, !is.na(mortality180) & tmt == 1)
fit.tmt <- glm(mortality180 ~ age_at_consent + thalamic_ich + initIVHvol,data=tmt,family=binomial())
summary(fit.tmt)
control <- subset(data, !is.na(mortality180) & tmt == 0)
fit.control <- glm(mortality180 ~ age_at_consent + thalamic_ich + initIVHvol,data=control,family=binomial())
temp <- subset(data, !is.na(mortality180))
predict.tmt <- predict(fit.tmt, newdata = temp, type="response")
predict.control <- predict(fit.control, newdata = temp, type="response")
predict.tmt
predict.tmt-predict.control
subjects.diffG10 <- temp[predict.control-predict.tmt > 0.1,] ##G10 stands for "greater than 10%"
predict.diffG10 <- getInput.mortality180(subjects.diffG10)
predict.diffG10
46/(46+85)
26/(26+108)
predict.diffG10 <- getInput.mortality180(subjects.diffG10)
subjects.diffL10 <- temp[predict.control-predict.tmt <= 0.1,] ##L10 stands for "less than or equal to 10%"
predict.diffL10 <- getInput.mortality180(subjects.diffL10)
subjects.diffG5 <- temp[predict.control-predict.tmt > 0.05,]
predict.diffG5 <- getInput.mortality180(subjects.diffG5)
subjects.diffL5 <- temp[predict.control-predict.tmt <= 0.05,]
predict.diffL5 <- getInput.mortality180(subjects.diffL5)
subjects.diffG0 <- temp[predict.control-predict.tmt > 0,]
predict.diffG0 <- getInput.mortality180(subjects.diffG0)
subjects.diffL0 <- temp[predict.control-predict.tmt <= 0,]
predict.diffL0 <- getInput.mortality180(subjects.diffL0)
result <- rbind(result,
predict.diffG10,
predict.diffL10,
predict.diffG5,
predict.diffL5,
predict.diffG0,
predict.diffL0)
result
result[,1]+result[,2]+result[,3]+result[,4]
setwd("~/Desktop/CLEARIII/applyMethod/mortality180")
write.table(result, file = "mortality180.txt", row.names = FALSE, col.names = FALSE)
rm(list=ls())
setwd("~/Desktop/CLEARIII/constructDataset")
load("data.Rdata")
getInput.rankin30 <- function(data){
val <- c(sum(data$tmt == 0 & data$rankin30 == 6),
sum(data$tmt == 0 & data$rankin30 == 5),
sum(data$tmt == 0 & data$rankin30 == 4),
sum(data$tmt == 0 & data$rankin30 == 3),
sum(data$tmt == 0 & data$rankin30 == 2),
sum(data$tmt == 0 & data$rankin30 == 1),
sum(data$tmt == 0 & data$rankin30 == 0),
sum(data$tmt == 1 & data$rankin30 == 6),
sum(data$tmt == 1 & data$rankin30 == 5),
sum(data$tmt == 1 & data$rankin30 == 4),
sum(data$tmt == 1 & data$rankin30 == 3),
sum(data$tmt == 1 & data$rankin30 == 2),
sum(data$tmt == 1 & data$rankin30 == 1),
sum(data$tmt == 1 & data$rankin30 == 0))
return(val)
}
temp <- subset(data, !is.na(rankin30))
all <- getInput.rankin30(temp)
temp <- subset(data, !is.na(rankin30) & initIVHvol <= 17.5)
vol_less17.5 <- getInput.rankin30(temp)
temp <- subset(data, !is.na(rankin30) & initIVHvol > 17.5)
vol_more17.5 <- getInput.rankin30(temp)
temp <- subset(data, !is.na(rankin30) & initIVHvol <= 20)
vol_less20 <- getInput.rankin30(temp)
temp <- subset(data, !is.na(rankin30) & initIVHvol > 20 & initIVHvol <= 50)
vol_20to50 <- getInput.rankin30(temp)
result <- rbind(all,vol_less17.5,vol_more17.5,vol_less20,vol_20to50)
setwd("~/Desktop/CLEARIII/applyMethod/rankin30")
write.table(result, file = "rankin30.txt", row.names = FALSE, col.names = FALSE)
result
result[1,]
result[2,]+result[3,]
result[4,]+result[5,]
rm(list=ls())
setwd("~/Desktop/CLEARIII/constructDataset")
load("data.Rdata")
getInput.rankin180 <- function(data){
val <- c(sum(data$tmt == 0 & data$rankin180 == 6),
sum(data$tmt == 0 & data$rankin180 == 5),
sum(data$tmt == 0 & data$rankin180 == 4),
sum(data$tmt == 0 & data$rankin180 == 3),
sum(data$tmt == 0 & data$rankin180 == 2),
sum(data$tmt == 0 & data$rankin180 == 1),
sum(data$tmt == 0 & data$rankin180 == 0),
sum(data$tmt == 1 & data$rankin180 == 6),
sum(data$tmt == 1 & data$rankin180 == 5),
sum(data$tmt == 1 & data$rankin180 == 4),
sum(data$tmt == 1 & data$rankin180 == 3),
sum(data$tmt == 1 & data$rankin180 == 2),
sum(data$tmt == 1 & data$rankin180 == 1),
sum(data$tmt == 1 & data$rankin180 == 0))
return(val)
}
temp <- subset(data, !is.na(rankin180))
all <- getInput.rankin180(temp)
temp <- subset(data, !is.na(rankin180) & initIVHvol <= 17.5)
vol_less17.5 <- getInput.rankin180(temp)
temp <- subset(data, !is.na(rankin180) & initIVHvol > 17.5)
vol_more17.5 <- getInput.rankin180(temp)
temp <- subset(data, !is.na(rankin180) & initIVHvol <= 20)
vol_less20 <- getInput.rankin180(temp)
temp <- subset(data, !is.na(rankin180) & initIVHvol > 20 & initIVHvol <= 50)
vol_20to50 <- getInput.rankin180(temp)
result <- rbind(all,vol_less17.5,vol_more17.5,vol_less20,vol_20to50)
setwd("~/Desktop/CLEARIII/applyMethod/rankin180")
write.table(result, file = "rankin180.txt", row.names = FALSE, col.names = FALSE)
