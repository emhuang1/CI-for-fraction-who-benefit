library(R.matlab)
library(quadprog)
rm(list=ls())
pC = .4
pT = .6
pC1 = .165
pC2 = .235
pT1 = .31
pT2 = .29
bvec2 <- c(0,0,0,1,-1)
Amat2 <- t(rbind(c(1,0,0), c(0,1,0), c(0,0,1), c(1,1,1), c(-1,-1,-1)))
dvec2 <- 2*c(pC1+pT1, pC1 + pT2, pC2 + pT2)
Dmat2 <- diag(3)
Dmat2[1,2] <- pC
Dmat2[2,1] <- pC
Dmat2[2,3] <- pT
Dmat2[3,2] <- pT
Dmat2 <- Dmat2 * 2
QPproblem2 <- solve.QP(Dmat2, dvec2, Amat2, bvec2, meq=0, factorized=FALSE)
val2 <- QPproblem2$value + 1
val2
QPproblem$solution
QPproblem2$solution
diag(3)
psi.cand <- seq(from = 0, to = 1, by = 0.01)
j <- 42
bvec1 <- c(0,0,1-psi.cand[j], -(1-psi.cand[j]))
Amat1 <- t(rbind(c(1,0), c(0,1), c(1,1), c(-1,-1)))
dvec1 <- 2*c(pC1 + pT1-pC*psi.cand[j], pC2 + pT2 - pT*psi.cand[j])
Dmat1 <- 2*rbind(c(1,0), c(0,1))
QPproblem1 <- solve.QP(Dmat1, dvec1, Amat1, bvec1, meq=0, factorized=FALSE)
val1 <- QPproblem1$value + 1 + psi.cand[j]^2 - 2*(pC1 + pT2)*psi.cand[j]
val1
QPproblem1$solution
