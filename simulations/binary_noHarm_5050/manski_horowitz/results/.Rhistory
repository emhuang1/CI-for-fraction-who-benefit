CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
plot(0,0, type = "n", xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", xlab = NA, ylab = NA, yaxs = "i", bty = "l")
rect(lb,0,ub,1, col = "grey90", border = NA)
par(new = TRUE)
plot(psi,cov.mOfn.25, xlim = xregion, ylim = yregion, main = NA, type = "l",lty = 4, xlab = expression(psi), ylab = NA, lwd = 2, cex.lab=1.5, cex.axis=1.5, cex.main=1,yaxs = "i", bty = "l")
title(ylab = expression(paste("Probability that the CI contains ",psi)), line=2.5, cex.lab=1.5)
par(new = TRUE)
##plot(psi,cov.mOfn.50, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
##par(new = TRUE)
##plot(psi,cov.mOfn.75, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "purple", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
##plot(psi,cov.mOfn.90, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "orange", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
plot(psi,cov.mOfn.100, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 3, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.our, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, lty = 1, type = "l", lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.horowitz, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
abline(h = 0.95, lty = 2)
#if (plotTitle == "Setting D"){
#  legend("bottomleft", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
#} else {
#  legend("bottomright", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
#}
##UNCOMMENT LINES ABOVE FOR MAIN PAPER PLOTS
if (plotTitle == "Setting D"){
legend("left", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
} else {
legend("right", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
}
##UNCOMMENT LINES ABOVE FOR SUPP MAT PLOTS
}
plotCov_singleSetting <- function(n, lb, ub, nsim, homWd, plotTitle, xregion, yregion){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
plot(0,0, type = "n", xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", xlab = NA, ylab = NA, yaxs = "i", bty = "l")
rect(lb,0,ub,1, col = "grey90", border = NA)
par(new = TRUE)
plot(psi,cov.mOfn.25, xlim = xregion, ylim = yregion, main = NA, type = "l",lty = 4, xlab = expression(psi), ylab = NA, lwd = 2, cex.lab=1.5, cex.axis=1.5, cex.main=1,yaxs = "i", bty = "l")
title(ylab = expression(paste("Probability that the CI contains ",psi)), line=2.5, cex.lab=1.5)
par(new = TRUE)
##plot(psi,cov.mOfn.50, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
##par(new = TRUE)
##plot(psi,cov.mOfn.75, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "purple", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
##plot(psi,cov.mOfn.90, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "orange", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
plot(psi,cov.mOfn.100, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 3, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.our, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, lty = 1, type = "l", lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.horowitz, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
abline(h = 0.95, lty = 2)
if (plotTitle == "Setting D"){
legend("bottomleft", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
} else {
legend("bottomright", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
}
##UNCOMMENT LINES ABOVE FOR MAIN PAPER PLOTS
# if (plotTitle == "Setting D"){
#   legend("left", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
# } else {
#   legend("right", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
# }
##UNCOMMENT LINES ABOVE FOR SUPP MAT PLOTS
}
plotCov_singleSetting_zoomIn <- function(n, lb, ub, nsim, homWd, plotTitle, xregion, yregion){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
plot(0,0, type = "n", xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", xlab = NA, ylab = NA, yaxs = "i", bty = "n")
rect(lb,0,ub,1, col = "grey90", border = NA)
par(new = TRUE)
plot(psi,cov.mOfn.25, xlim = xregion, ylim = yregion, main = NA, type = "l",lty = 4, xlab = NA, ylab = NA, lwd = 2, cex.lab=1.5, cex.axis=1.5, cex.main=1,yaxs = "i", bty = "l")
#title(ylab = expression(paste("Probability that the CI contains ",psi)), line=2.5, cex.lab=1.5)
par(new = TRUE)
##plot(psi,cov.mOfn.50, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
##par(new = TRUE)
##plot(psi,cov.mOfn.75, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "purple", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
##plot(psi,cov.mOfn.90, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "orange", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
plot(psi,cov.mOfn.100, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 3, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.our, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, lty = 1, type = "l", lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.horowitz, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
abline(h = 0.95, lty = 2)
}
n <- 500
setwd("~/Desktop/plotsForPaper")
pdf("SettingB_N500.pdf")
lb <- -0.002 ##lb and ub are both 0, but we do -0.002/0.002 so grey rectangle is visible
ub <- 0.002
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noHarm_5050"
plotTitle <- "Setting B"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
setwd("~/Desktop/plotsForPaper")
pdf("SettingB_N500_zoomIn.pdf")
lb <- -0.0005
ub <- 0.0005
plotCov_singleSetting_zoomIn(n, lb, ub, nsim, homWd, plotTitle, c(0,0.1), c(0.9,1))
dev.off()
plotCov_singleSetting <- function(n, lb, ub, nsim, homWd, plotTitle, xregion, yregion){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
plot(0,0, type = "n", xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", xlab = NA, ylab = NA, yaxs = "i", bty = "l")
rect(lb,0,ub,1, col = "grey90", border = NA)
par(new = TRUE)
plot(psi,cov.mOfn.25, xlim = xregion, ylim = yregion, main = NA, type = "l",lty = 4, xlab = expression(psi), ylab = NA, lwd = 2, cex.lab=1.5, cex.axis=1.5, cex.main=1,yaxs = "i", bty = "l")
title(ylab = expression(paste("Probability that the CI contains ",psi)), line=2.5, cex.lab=1.5)
par(new = TRUE)
##plot(psi,cov.mOfn.50, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
##par(new = TRUE)
##plot(psi,cov.mOfn.75, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "purple", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
##plot(psi,cov.mOfn.90, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "orange", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
plot(psi,cov.mOfn.100, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 3, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.our, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, lty = 1, type = "l", lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.horowitz, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
abline(h = 0.95, lty = 2)
# if (plotTitle == "Setting D"){
#  legend("bottomleft", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
# } else {
#  legend("bottomright", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
# }
##UNCOMMENT LINES ABOVE FOR MAIN PAPER PLOTS
if (plotTitle == "Setting D"){
legend("left", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
} else {
legend("right", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
}
##UNCOMMENT LINES ABOVE FOR SUPP MAT PLOTS
}
n <- 200
setwd("~/Desktop/plotsForPaper/suppMatPlots")
pdf("SettingB_N200.pdf")
lb <- -0.002 ##lb and ub are both 0, but we do -0.002/0.002 so grey rectangle is visible
ub <- 0.002
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noHarm_5050"
plotTitle <- "Setting B"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 1000
setwd("~/Desktop/plotsForPaper/suppMatPlots")
pdf("SettingB_N1000.pdf")
lb <- -0.002 ##lb and ub are both 0, but we do -0.002/0.002 so grey rectangle is visible
ub <- 0.002
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noHarm_5050"
plotTitle <- "Setting B"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 2000
setwd("~/Desktop/plotsForPaper/suppMatPlots")
pdf("SettingB_N2000.pdf")
lb <- -0.002 ##lb and ub are both 0, but we do -0.002/0.002 so grey rectangle is visible
ub <- 0.002
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noHarm_5050"
plotTitle <- "Setting B"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
avgWidth <- function(n, nsim, homWd, plotTitle){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
widths <- c(mean(CI.our[,2]-CI.our[,1]),
mean(CI.mOfn[,2]-CI.mOfn[,1]),
mean(CI.mOfn[,4]-CI.mOfn[,3]),
mean(CI.mOfn[,6]-CI.mOfn[,5]),
mean(CI.mOfn[,8]-CI.mOfn[,7]),
mean(CI.mOfn[,10]-CI.mOfn[,9]),
mean(CI.horowitz[,2]-CI.horowitz[,1]))
return(widths)
}
library(xtable)
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noRes_5050"
plotTitle <- "Setting A"
n <- 200
settingA.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noHarm_5050"
plotTitle <- "Setting B"
n <- 200
settingB.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noRes_7550"
plotTitle <- "Setting C"
n <- 200
settingC.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 1000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/MISTIE_RICV5"
plotTitle <- "Setting D"
n <- 200
settingD.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
settingA.width <- data.frame(settingA.width)
settingB.width <- data.frame(settingB.width)
settingC.width <- data.frame(settingC.width)
settingD.width <- data.frame(settingD.width)
lab <- c("n", "our method", "m100", "m90",
"m75", "m50", "m25", "H-M")
names(settingA.width) <- lab
names(settingB.width) <- lab
names(settingC.width) <- lab
names(settingD.width) <- lab
settingA <- xtable(settingA.width)
digits(settingA) <- c(0,0,rep(2,7))
print(settingA, include.rownames = FALSE)
settingB <- xtable(settingB.width)
digits(settingB) <- c(0,0,rep(2,7))
print(settingB, include.rownames = FALSE)
settingB
settingB.width
B <- settingB.width
names(B)[2] <- c("ourMethod")
names(B)[8] <- c("HM")
names(B)
C <- settingC.width
names(C)[2] <- "ourMethod"
names(C)[8] <- "HM"
head(C)
(C$m100 - C$ourMethod)/C$ourMethod
(C$m100 - C$ourMethod)
C$ourMethod/C$m100
1-C$ourMethod/C$m100
cbind(1-C$ourMethod/C$m100, 1-C$ourMethod/C$m90, 1-C$ourMethod/C$m75, 1-C$ourMethod/C$m50,1-C$ourMethod/C$m25)
1-C$ourMethod/C$HM
1-B$ourMethod/B$HM
1-B$HM/B$ourMethod
cbind(1-B$ourMethod/B$m100, 1-B$ourMethod/B$m90, 1-B$ourMethod/B$m75, 1-B$ourMethod/B$m50,1-B$ourMethod/B$m25)
rm(C)
cbind(1-B$ourMethod/B$m100, 1-B$ourMethod/B$m90, 1-B$ourMethod/B$m75, 1-B$ourMethod/B$m50,1-B$ourMethod/B$m25)
cbind(1-B$ourMethod/B$m100, 1-B$ourMethod/B$m90, 1-B$ourMethod/B$m75, 1-B$ourMethod/B$m50,1-B$ourMethod/B$m25)*100
B
0.058040/0.06158081
1-0.058040/0.06158081
n <- 500
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noHarm_5050"
plotTitle <- "Setting B"
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
head(CI.our)
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
cov.our
cov.horowitz
1-cov.our
1-cov.horowitz
CI.our
table(CI.our[,1])
table(CI.our[,1])/5000
table(CI.horowitz[,1])/5000
table(round(CI.horowitz[,1],digits = 2)/5000
)
round(CI.horowitz[,1],digits = 2)
table(round(CI.horowitz[,1],digits = 2))
table(round(CI.horowitz[,1],digits = 2))/5000
table(CI.our[,1])
table(CI.our[,1])/5000
mean(CI.our[,1] == 0 % CI.our[,2] >= 0.02)
mean(CI.our[,1] == 0 & CI.our[,2] >= 0.02)
mean(CI.our[,1] == 0.01 & CI.our[,2] >= 0.02)
mean(CI.our[,1] == 0.02 & CI.our[,2] >= 0.02)
0.0116+0.0146
