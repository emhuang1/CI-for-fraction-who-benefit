y <- x + rnorm(n, mean = 0, sd = 1)
plot(x,y,xlim = xRange, ylim = yRange)
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 1)
plot(x,y,xlim = xRange, ylim = yRange)
par(mfrow = c(1,2))
n <- 500
xRange <- c(-15,15)
yRange <- c(-15,15)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 1)
plot(x,y,xlim = xRange, ylim = yRange)
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 1)
plot(x,y,xlim = xRange, ylim = yRange)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 1)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",cor(x,y)))
par(mfrow = c(1,2))
n <- 500
xRange <- c(-15,15)
yRange <- c(-15,15)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 2)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y))))
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 2)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y))))
par(mfrow = c(1,2))
n <- 500
xRange <- c(-15,15)
yRange <- c(-15,15)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 3)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y))))
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 3)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y))))
par(mfrow = c(1,2))
n <- 500
xRange <- c(-15,15)
yRange <- c(-15,15)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 5)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y))))
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 5)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y))))
par(mfrow = c(1,2))
n <- 500
xRange <- c(-15,15)
yRange <- c(-15,15)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 5)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y),2)))
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 5)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y),2)))
par(mfrow = c(1,2))
n <- 500
xRange <- c(-15,15)
yRange <- c(-15,15)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 4)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y),2)))
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 4)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y),2)))
par(mfrow = c(1,2))
n <- 500
xRange <- c(-15,15)
yRange <- c(-15,15)
x <- rnorm(n, mean = 0, sd = 3)
y <- x + rnorm(n, mean = 0, sd = 3)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y),2)))
x <- rnorm(n, mean = 0, sd = 3)
y <- - x + rnorm(n, mean = 0, sd = 3)
plot(x,y,xlim = xRange, ylim = yRange,
cex.lab = 1.5, cex.main = 2, cex.axis = 1.5,
main = paste("r = ",round(cor(x,y),2)))
load("~/Dropbox/WakeForest/teaching/STA111/PreviousDocs/MST109/Data/Textbook_DataSets/MST109/Chapter 5/ex0537brosis.rda")
View(ex0537brosis)
data <- ex0537brosis
plot(data$Brother, data$Sister)
library(UsingR)
install.packages("UsingR")
library(UsingR)
data(father.son)
head(father.son)
nrow(father.son)
data <- father.son
nrow(data)
plot(data$fheight, data$sheight)
plot(data$fheight, data$sheight, xlim = c(50,80), ylim = c(50,80))
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80))
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
lm(data = father.son)
samp <- sample(1:n, 100, replace = FALSE)
n <- nrow(data)
set.seed(263517401)
samp <- sample(1:n, 100, replace = FALSE)
head(samp)
data <- father.son[samp,]
head(data)
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
fit <- lm(data = father.son)
fit <- lm(sheight ~ fheight, data = data)
head(fit)
summary(fit)
library(UsingR)
data(father.son)
n <- nrow(father.son)
set.seed(263517401)
samp <- sample(1:n, 50, replace = FALSE)
data <- father.son[samp,]
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
data(father.son)
n <- nrow(father.son)
set.seed(263517401)
samp <- sample(1:n, 25, replace = FALSE)
data <- father.son[samp,]
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
fit <- lm(sheight ~ fheight, data = data)
summary(fit)
data(father.son)
n <- nrow(father.son)
set.seed(263517401)
samp <- sample(1:n, 35, replace = FALSE)
data <- father.son[samp,]
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
fit <- lm(sheight ~ fheight, data = data)
summary(fit)
data(father.son)
n <- nrow(father.son)
set.seed(263517401)
samp <- sample(1:n, 50, replace = FALSE)
data <- father.son[samp,]
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
fit <- lm(sheight ~ fheight, data = data)
summary(fit)
data(father.son)
n <- nrow(father.son)
set.seed(263517401)
samp <- sample(1:n, 75, replace = FALSE)
data <- father.son[samp,]
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)")
fit <- lm(sheight ~ fheight, data = data)
summary(fit)
a <- fit$coefficients[1]
a
b <- fit$coefficients[2]
b
abline(a = a, b = b, col = "red")
abline(a = a, b = b, col = "red", lwd = 2)
plot(data$fheight, data$sheight, xlim = c(55,80), ylim = c(55,80),
xlab = "Father's height (inches)", ylab = "Son's height (inches)",
cex.lab = 1.5, cex.axis = 1.5)
abline(a = a, b = b, col = "red", lwd = 2)
range(data)
lim <- c(58,76)
lim <- c(58,76)
plot(data$fheight, data$sheight, xlim = lim, ylim = lim,
xlab = "Father's height (inches)", ylab = "Son's height (inches)",
cex.lab = 1.5, cex.axis = 1.5)
abline(a = a, b = b, col = "red", lwd = 2)
mean(data$fheight)
sd(data$fheight)
mean(data$sheight)
sd(data$sheight)
summary(fit)
mean(data$fheight)
sd(data$fheight)
mean(data$sheight)
sd(data$sheight)
cor(data$sheight, data$fheight)
0.581*3.05*2.97
0.581*3.05/2.97
68.04-0.597*67.37
cor(data$sheight, data$fheight) * sd(data$sheight)/ sd(data$fheight)
mean(data$sheight)-cor(data$sheight, data$fheight) * sd(data$sheight)/ sd(data$fheight) * mean(data$fheight)
summary(fit)
27.82 + 0.597 * 69
27.82 + 0.597 * 64
27.82 + 0.597 * 65
.581^2
fit
head(fit)
plot(fit$residuals)
plot(data$fheight, fit$residuals)
abline(h = 0)
data$predict <- a + b * data$fheight
data$resid <- data$predict - data$sheight
plot(data$fheight, data$resid)
data$resid <- data$sheight - data$predict
plot(data$fheight, data$resid)
plot(data$fheight, fit$residuals)
abline(h = 0, lty = 2)
plot(data$fheight, data$resid,
xlab = "Father's height (inches)",
ylab = "Residual (inches)",
main = "Residual Plot",
cex.lab = 1.5, cex.main = 1.5, cex.axis = 1.5)
plot(data$fheight, data$resid,
xlab = "Father's height (inches)",
ylab = "Residual (inches)",
main = "Residual Plot",
ylim = c(-7,7),
cex.lab = 1.5, cex.main = 1.5, cex.axis = 1.5)
plot(data$fheight, data$resid,
xlab = "Father's height (inches)",
ylab = "Residual (inches)",
main = "Residual Plot",
ylim = c(-8,8),
cex.lab = 1.5, cex.main = 1.5, cex.axis = 1.5)
abline(h = 0, lty = 2)
rm(list=ls())
psi <- seq(from = 0, to = 1, by = 0.01)
plotCov_singleSetting <- function(n, lb, ub, nsim, homWd, plotTitle, xregion, yregion){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
plot(0,0, type = "n", xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", xlab = NA, ylab = NA, yaxs = "i", bty = "l")
rect(lb,0,ub,1, col = "grey90", border = NA)
par(new = TRUE)
plot(psi,cov.mOfn.25, xlim = xregion, ylim = yregion, main = NA, type = "l",lty = 4, xlab = expression(psi), ylab = NA, lwd = 2, cex.lab=1.5, cex.axis=1.5, cex.main=1,yaxs = "i", bty = "l")
title(ylab = expression(paste("Probability that the CI contains ",psi)), line=2.5, cex.lab=1.5)
par(new = TRUE)
##plot(psi,cov.mOfn.50, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
##par(new = TRUE)
##plot(psi,cov.mOfn.75, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "purple", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
##plot(psi,cov.mOfn.90, xlim = c(0,1), ylim = c(0,1), xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, col = "orange", type = "l", lwd = 1.5, cex.lab=2, cex.main=2, yaxs = "i")
##par(new = TRUE)
plot(psi,cov.mOfn.100, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 3, lwd = 2, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.our, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, lty = 1, type = "l", lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
par(new = TRUE)
plot(psi,cov.horowitz, xlim = xregion, ylim = yregion, xaxt = "n", yaxt = "n", main = NA, xlab = NA, ylab = NA, type = "l", lty = 5, lwd = 1.5, cex.lab=1.5, cex.main=1, yaxs = "i", bty = "l")
abline(h = 0.95, lty = 2)
# if (plotTitle == "Setting D"){
#  legend("bottomleft", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
# } else {
#  legend("bottomright", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5))
# }
##UNCOMMENT LINES ABOVE FOR MAIN PAPER PLOTS
if (plotTitle == "Setting D"){
legend("left", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
} else {
legend("right", c("our method","m = n", "m = 0.25n","Horowitz-Manski"), lty = c(1,3,4,5), lwd = c(1.5,2,2,1.5), cex = 0.8)
}
##UNCOMMENT LINES ABOVE FOR SUPP MAT PLOTS
}
lb <- 0.25
ub <- 0.5
nsim <- 5000
n <- 200
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/binary_noRes_7550"
plotTitle <- "Setting C"
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
cbind(psi,cov.our,cov.horowitz,cov.mOfn.25,cov.mOfn.50,cov.mOfn.75,cov.mOfn.90,cov.mOfn.100)
cbind(psi,cov.our,cov.horowitz,cov.mOfn.25,cov.mOfn.50,cov.mOfn.75,cov.mOfn.90,cov.mOfn.100)
n <- 500
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
cbind(psi,cov.our,cov.horowitz,cov.mOfn.25,cov.mOfn.50,cov.mOfn.75,cov.mOfn.90,cov.mOfn.100)
homWd <- "~/Dropbox/research/github/CI-for-fraction-who-benefit/simulations/MISTIE_RICV5"
plotTitle <- "Setting D"
n <- 2000
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
nsim <- 1000
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
setwd(homWd)
setwd("manski_horowitz/results")
load(paste("res",n,".Rdata", sep = ""))
CI.horowitz <- ci[1:nsim,]
rm(ci)
cov.our <- rep(NA,length(psi))
cov.mOfn.25 <- rep(NA,length(psi))
cov.mOfn.50 <- rep(NA,length(psi))
cov.mOfn.75 <- rep(NA,length(psi))
cov.mOfn.90 <- rep(NA,length(psi))
cov.mOfn.100 <- rep(NA,length(psi))
cov.horowitz <- rep(NA, length(psi))
for (i in 1:length(psi)){
cov.our[i] <- sum(psi[i] >= CI.our[,1] & psi[i] <= CI.our[,2])/nsim
cov.mOfn.100[i] <- sum(psi[i] >= CI.mOfn[,1] & psi[i] <= CI.mOfn[,2])/nsim
cov.mOfn.90[i] <- sum(psi[i] >= CI.mOfn[,3] & psi[i] <= CI.mOfn[,4])/nsim
cov.mOfn.75[i] <- sum(psi[i] >= CI.mOfn[,5] & psi[i] <= CI.mOfn[,6])/nsim
cov.mOfn.50[i] <- sum(psi[i] >= CI.mOfn[,7] & psi[i] <= CI.mOfn[,8])/nsim
cov.mOfn.25[i] <- sum(psi[i] >= CI.mOfn[,9] & psi[i] <= CI.mOfn[,10])/nsim
cov.horowitz[i] <- sum(psi[i] >= CI.horowitz[,1] & psi[i] <= CI.horowitz[,2])/nsim
}
cbind(cov.our, cov.horowitz)
cbind(psi,cov.our, cov.horowitz)
cbind(psi, cov.mOfn.100)
cbind(psi, cov.mOfn.90)
cbind(psi, cov.mOfn.75)
cbind(psi, cov.mOfn.50)
cbind(psi, cov.mOfn.25)
