##SETTING A##
n <- 200
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingA_N200.pdf")
lb <- 0
ub <- 0.5
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
plotTitle <- "Setting A"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 1000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingA_N1000.pdf")
lb <- 0
ub <- 0.5
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
plotTitle <- "Setting A"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 2000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingA_N2000.pdf")
lb <- 0
ub <- 0.5
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
plotTitle <- "Setting A"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
##SETTING B##
n <- 200
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingB_N200.pdf")
lb <- -0.002 ##lb and ub are both 0, but we do -0.002/0.002 so grey rectangle is visible
ub <- 0.002
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noHarm_5050"
plotTitle <- "Setting B"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 1000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingB_N1000.pdf")
lb <- -0.002 ##lb and ub are both 0, but we do -0.002/0.002 so grey rectangle is visible
ub <- 0.002
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noHarm_5050"
plotTitle <- "Setting B"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 2000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingB_N2000.pdf")
lb <- -0.002 ##lb and ub are both 0, but we do -0.002/0.002 so grey rectangle is visible
ub <- 0.002
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noHarm_5050"
plotTitle <- "Setting B"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
##SETTING C##
lb <- 0.25
ub <- 0.5
nsim <- 5000
n <- 200
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingC_N200.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_7550"
plotTitle <- "Setting C"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 500
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingC_N500.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_7550"
plotTitle <- "Setting C"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 1000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingC_N1000.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_7550"
plotTitle <- "Setting C"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 2000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingC_N2000.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_7550"
plotTitle <- "Setting C"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
##SETTING D##
lb <- 0.82
ub <- 0.96
nsim <- 1000
n <- 200
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingD_N200.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 500
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingD_N500.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 1000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingD_N1000.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
n <- 2000
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit/plotsForPaper/suppMatPlots")
pdf("SettingD_N2000.pdf")
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
plotCov_singleSetting(n, lb, ub, nsim, homWd, plotTitle, c(0,1), c(0,1))
dev.off()
rm(list=ls())
avgWidth <- function(n, nsim, homWd){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
widths <- c(mean(CI.our[,2]-CI.our[,1]),
mean(CI.mOfn[,2]-CI.mOfn[,1]),
mean(CI.mOfn[,4]-CI.mOfn[,3]),
mean(CI.mOfn[,6]-CI.mOfn[,5]),
mean(CI.mOfn[,8]-CI.mOfn[,7]),
mean(CI.mOfn[,10]-CI.mOfn[,9]))
return(widths)
}
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
n <- 200
settingA.width <- c(n, avgWidth(n, nsim, homWd))
plotTitle <- "Setting A"
n <- 200
settingA.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
avgWidth <- function(n, nsim, homWd, plotTitle){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
widths <- c(mean(CI.our[,2]-CI.our[,1]),
mean(CI.mOfn[,2]-CI.mOfn[,1]),
mean(CI.mOfn[,4]-CI.mOfn[,3]),
mean(CI.mOfn[,6]-CI.mOfn[,5]),
mean(CI.mOfn[,8]-CI.mOfn[,7]),
mean(CI.mOfn[,10]-CI.mOfn[,9]))
return(widths)
}
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
plotTitle <- "Setting A"
n <- 200
settingA.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
rm(list=ls())
avgWidth <- function(n, nsim, homWd, plotTitle){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
widths <- c(mean(CI.our[,2]-CI.our[,1]),
mean(CI.mOfn[,2]-CI.mOfn[,1]),
mean(CI.mOfn[,4]-CI.mOfn[,3]),
mean(CI.mOfn[,6]-CI.mOfn[,5]),
mean(CI.mOfn[,8]-CI.mOfn[,7]),
mean(CI.mOfn[,10]-CI.mOfn[,9]))
return(widths)
}
psi <- seq(from = 0, to = 1, by = 0.01)
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
plotTitle <- "Setting A"
n <- 200
settingA.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
settingA.width
n <- 1000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
settingA.width
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noHarm_5050"
plotTitle <- "Setting B"
n <- 200
settingB.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
settingB.width
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
n <- 200
settingD.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
settingD.width
nsim <- 1000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
n <- 200
settingD.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
rm(list=ls())
avgWidth <- function(n, nsim, homWd, plotTitle){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
widths <- c(mean(CI.our[,2]-CI.our[,1]),
mean(CI.mOfn[,2]-CI.mOfn[,1]),
mean(CI.mOfn[,4]-CI.mOfn[,3]),
mean(CI.mOfn[,6]-CI.mOfn[,5]),
mean(CI.mOfn[,8]-CI.mOfn[,7]),
mean(CI.mOfn[,10]-CI.mOfn[,9]))
return(widths)
}
psi <- seq(from = 0, to = 1, by = 0.01)
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
plotTitle <- "Setting A"
n <- 200
settingA.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noHarm_5050"
plotTitle <- "Setting B"
n <- 200
settingB.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_7550"
plotTitle <- "Setting C"
n <- 200
settingC.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 1000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
n <- 200
settingD.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
settingD.width
settingC.width
settingD.width
settingA.width
1-settingA.width[,3]/settingA.width[,2]
1-settingA.width[,2]/settingA.width[,3]
1-settingB.width[,2]/settingB.width[,3]
1-settingB.width[,2]/settingB.width[,4]
1-settingB.width[,2]/settingB.width[,5]
1-settingB.width[,2]/settingB.width[,6]
1-settingB.width[,2]/settingB.width[,7]
1-settingC.width[,2]/settingC.width[,3]
1-settingC.width[,2]/settingC.width[,4]
1-settingC.width[,2]/settingC.width[,5]
1-settingC.width[,2]/settingC.width[,6]
1-settingC.width[,2]/settingC.width[,7]
settingA.width
settingD.width
1-settingD.width[,3]/settingD.width[,2]
1-settingD.width[,4]/settingD.width[,2]
1-settingD.width[,5]/settingD.width[,2]
1-settingD.width[,6]/settingD.width[,2]
1-settingD.width[,7]/settingD.width[,2]
1-0.2118305/0.21550
1-settingD.width[,2]/settingD.width[,3]
1-settingD.width[,2]/settingD.width[,4]
1-settingD.width[,2]/settingD.width[,5]
1-settingD.width[,2]/settingD.width[,6]
1-settingD.width[,2]/settingD.width[,7]
?xtable
library(xtable)
?xtable
settingA.width <- data.frame(settingA.width)
settingB.width <- data.frame(settingB.width)
settingC.width <- data.frame(settingC.width)
settingD.width <- data.frame(settingD.width)
settingA.width
lab <- c("n", "our method", "m100", "m90",
"m75", "m50", "m25")
names(settingA.width) <- lab
names(settingB.width) <- lab
names(settingC.width) <- lab
names(settingD.width) <- lab
settingA <- xtable(settingA.width)
print(settingA)
print(settingA, include.rownames = FALSE)
digits(settingA) <- c(0,0,rep(2,6))
print(settingA, include.rownames = FALSE)
rm(list=ls())
avgWidth <- function(n, nsim, homWd, plotTitle){
setwd(homWd)
setwd("ourMethod/results")
load(paste("res",n,".Rdata", sep = ""))
if (plotTitle == "Setting D"){
CI.our <- ci ##CI has previously been computed
} else {
CI.our <- matrix(NA, nrow = nsim, ncol = 2) ##compute CI from the confidence set
for (sim in 1:nsim){
temp <- which(ci[sim,]==1)
if (length(temp) >= 1){
CI.our[sim,] <- c(psi[min(temp)], psi[max(temp)])
} else{
CI.our[sim,] <- c(NA,NA)
}
}
}
setwd(homWd)
setwd("mOfn/results")
load(paste("res",n,".Rdata", sep = ""))
CI.mOfn <- ci[1:nsim,]
rm(ci)
widths <- c(mean(CI.our[,2]-CI.our[,1]),
mean(CI.mOfn[,2]-CI.mOfn[,1]),
mean(CI.mOfn[,4]-CI.mOfn[,3]),
mean(CI.mOfn[,6]-CI.mOfn[,5]),
mean(CI.mOfn[,8]-CI.mOfn[,7]),
mean(CI.mOfn[,10]-CI.mOfn[,9]))
return(widths)
}
psi <- seq(from = 0, to = 1, by = 0.01)
library(xtable)
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_5050"
plotTitle <- "Setting A"
n <- 200
settingA.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingA.width <- rbind(settingA.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noHarm_5050"
plotTitle <- "Setting B"
n <- 200
settingB.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingB.width <- rbind(settingB.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 5000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/binary_noRes_7550"
plotTitle <- "Setting C"
n <- 200
settingC.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingC.width <- rbind(settingC.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
nsim <- 1000
homWd <- "~/Dropbox/research/github/CI_for_propWhoBenefit/MISTIE_RICV5"
plotTitle <- "Setting D"
n <- 200
settingD.width <- c(n, avgWidth(n, nsim, homWd, plotTitle))
n <- 500
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 1000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
n <- 2000
settingD.width <- rbind(settingD.width, c(n, avgWidth(n, nsim, homWd, plotTitle)))
settingA.width <- data.frame(settingA.width)
settingB.width <- data.frame(settingB.width)
settingC.width <- data.frame(settingC.width)
settingD.width <- data.frame(settingD.width)
lab <- c("n", "our method", "m100", "m90",
"m75", "m50", "m25")
names(settingA.width) <- lab
names(settingB.width) <- lab
names(settingC.width) <- lab
names(settingD.width) <- lab
settingA <- xtable(settingA.width)
digits(settingA) <- c(0,0,rep(2,6))
print(settingA, include.rownames = FALSE)
settingB <- xtable(settingB.width)
digits(settingB) <- c(0,0,rep(2,6))
print(settingB, include.rownames = FALSE)
settingC <- xtable(settingC.width)
digits(settingC) <- c(0,0,rep(2,6))
print(settingC, include.rownames = FALSE)
settingD <- xtable(settingD.width)
digits(settingD) <- c(0,0,rep(2,6))
print(settingD, include.rownames = FALSE)
settingA.width
settingA.width$m50-settA.width[,2]
settingA.width$m50-settingA.width[,2]
settingA.width$m25-settingA.width[,2]
settingB.width$m50-settingB.width[,2]
settingB.width$m25-settingB.width[,2]
settingC.width$m25-settingC.width[,2]
settingC.width$m50-settingC.width[,2]
settingD.width$m50-settingD.width[,2]
settingD.width$m25-settingD.width[,2]
