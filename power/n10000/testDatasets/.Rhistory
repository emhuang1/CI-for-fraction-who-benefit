####################################################################################
event <- c("stairDown", "stairUp")
startTime <- c(25 * 60 + 55,
26 * 60 + 24)
endTime <- c(26 * 60 + 04,
26 * 60 + 35)
session_name <- "stairs_in_building"
process_testData_snapshot(acc_front_all, acc_back_all, gyro_front_all, gyro_back_all,
event, startTime, endTime, margin, session_name)
rm(list=ls())
subject <- "subject2"
filepath_labelledData <- paste("~/Documents/data/ACSGA/data/", subject, "/labelled_data", sep = "")
filepath_labelledData <- paste("~/Documents/data/ACSGA/data/", subject, "/labelled_data", sep = "")
filepath_plots <- paste("~/Documents/data/ACSGA/analysis/movelet/results/", subject, sep = "")
filepath_labelledTestData <- paste("~/Documents/data/ACSGA/data/", subject, "/labelled_data/test/phones", sep = "")
setwd("~/Dropbox/Onnela_postdoc/code/functions")
source("functions_ACSGA.R")
options(digits = 12)
frequency <- 10
moveletLength <- 1/2
distOption <- "L2"
activityList <- c("walk",
"stand",
"stairUp",
"stairDown",
"standToSit",
"sit",
"sitToStand",
"revolving door",
"normal",
"fast",
"slow")
activityCols <- c("green2",
"black",
"red",
"blue",
"orange",
"yellow",
"blueviolet",
"deeppink",
"green2",
"green3",
"green4")
trainingData_length <- 4
trainingActivities <- c("walk",
"stairUp",
"stairDown",
"stand",
"sit1",
"sit2",
"standToSit1",
"standToSit2",
"sitToStand1",
"sitToStand2")
load(paste(filepath_labelledData, "/training/phones/training.Rdata", sep = ""))
activities.long <- c("stand", "walk", "stairUp", "stairDown", "sit1", "sit2")
for (activity in activities.long){
##Time range for the activity
timeRange <- range(c(acc_back$timeElapsed[acc_back$label == activity],
acc_front$timeElapsed[acc_front$label == activity],
gyro_front$timeElapsed[gyro_front$label == activity],
gyro_back$timeElapsed[gyro_back$label == activity]))
##Middle trainingData_length seconds of that range
diff <- (timeRange[2] - timeRange[1] - trainingData_length)/2
midRange <- timeRange + c(diff, -diff)
##Remove rows where timeElapsed is outside the range
index <- which(acc_back$label == activity & (acc_back$timeElapsed < midRange[1] | acc_back$timeElapsed > midRange[2]))
acc_back <- acc_back[-index,]
index <- which(gyro_back$label == activity & (gyro_back$timeElapsed < midRange[1] | gyro_back$timeElapsed > midRange[2]))
gyro_back <- gyro_back[-index,]
index <- which(acc_front$label == activity & (acc_front$timeElapsed < midRange[1] | acc_front$timeElapsed > midRange[2]))
acc_front <- acc_front[-index,]
index <- which(gyro_front$label == activity & (gyro_front$timeElapsed < midRange[1] | gyro_front$timeElapsed > midRange[2]))
gyro_front <- gyro_front[-index,]
}
rm(activities.long, index, midRange)
acc_front <- subset(acc_front, label != "turn a corner")
acc_back <- subset(acc_back, label != "turn a corner")
gyro_front <- subset(gyro_front, label != "turn a corner")
gyro_back <- subset(gyro_back, label != "turn a corner")
training <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
rm(acc_front, acc_back, gyro_front, gyro_back)
setwd(filepath_plots)
session <- "lap_around_quad"
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
session <- "sitting"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
########################################################
##Walking at different speeds##
########################################################
##Name of session
session <- "walking_varySpeed"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
########################################################
##Lap around quad (apple down, face against leg)##
########################################################
##Name of session
session <- "appleDown_faceAgainstLeg"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
########################################################
##Lap around quad (apple down, face opposite leg)##
########################################################
##Name of session
session <- "appleDown_faceOppositeLeg"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
########################################################
##Lap around quad (apple up, face against leg)##
########################################################
##Name of session
session <- "appleUp_faceAgainstLeg"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
########################################################
##Lap around quad (apple up, face opposite leg)##
########################################################
##Name of session
session <- "appleUp_faceOppositeLeg"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
########################################################
##Going to building##
########################################################
##Name of session
session <- "going_to_building"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
########################################################
##Stairs in building##
########################################################
##Name of session
session <- "stairs_in_building"
##Load data from session
load(paste(filepath_labelledTestData, "/", session, ".Rdata", sep = ""))
##Put test data from different sensors in a single list
test <- list(acc_front = acc_front,
acc_back = acc_back,
gyro_front = gyro_front,
gyro_back = gyro_back)
##Apply movelet method and save plots
pdf(paste(session,".pdf", sep = ""))
applyMoveletMethod(test, training,
frequency, moveletLength, distOption,
trainingActivities, activityList, activityCols)
dev.off()
warnings()
setwd("~/Dropbox/research/github/CI_for_propWhoBenefit_FINAL/revision/power/binary_varyMarginals/n10000/testDatasets")
rm(list=ls())
p <- 0
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_0.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.05
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_05.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.1
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_10.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.15
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_15.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.2
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_20.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.25
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_25.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.3
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_30.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.35
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_35.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.4
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_40.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.45
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_45.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.5
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_50.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.55
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_55.txt",row.names = FALSE, col.names = FALSE)
rm(list=ls())
p <- 0.6
nsim <- 1000
set.seed(214622567)
seed <- sample(10^7,nsim)
N <- 10000
datasets <- matrix(NA, nrow = nsim, ncol = 6) ##columns will be pC, pT, pC1, pC2, pT1, pT2
for (sim in 1:nsim){
set.seed(seed[sim])
datasamp <- data.frame(trt = sample(0:1, size = N, replace = TRUE))
datasamp$y = NA
NT <- sum(datasamp$trt==1)
NC <- N - NT
datasamp$y[datasamp$trt==1] <- sample(1:2, size = NT, replace = TRUE, prob = c(p, 1-p))
datasamp$y[datasamp$trt==0] <- sample(1:2, size = NC, replace = TRUE, prob = c(0.5, 0.5))
datasets[sim,] <- c(sum(datasamp$trt == 0), sum(datasamp$trt == 1),
sum(datasamp$trt == 0 & datasamp$y == 1), sum(datasamp$trt == 0 & datasamp$y == 2),
sum(datasamp$trt == 1 & datasamp$y == 1), sum(datasamp$trt == 1 & datasamp$y == 2))
}
datasets <- datasets/N
write.table(datasets, file = "p_60.txt",row.names = FALSE, col.names = FALSE)
